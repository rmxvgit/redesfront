{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/rafa/tudo/materias/redes/redesfront/src/lib/requisition.tsx"],"sourcesContent":["\"use client\";\nconst backendUrl = \"https://backredes-production.up.railway.app\";\nimport axios from \"axios\";\nimport { CardPdfPost, CardPngPost, CardTxtPost, Post } from \"./interfaces\";\nimport { UserProfileData } from \"@/lib/interfaces\";\n\nexport async function login(values: { name: string; password: string }) {\n  const response = await axios.post(`${backendUrl}/auth/login`, values);\n  return response;\n}\n\nexport async function register(\n  values: {\n    name: string;\n    password: string;\n    bio: string;\n    job: string;\n  },\n  file: File | null,\n) {\n  const form_data = new FormData();\n  if (file) {\n    form_data.append(\"image\", file);\n  }\n  form_data.append(\"name\", values.name);\n  form_data.append(\"password\", values.password);\n  form_data.append(\"bio\", values.bio);\n  form_data.append(\"job\", values.job);\n\n  const response = await axios.post(`${backendUrl}/user`, form_data, {\n    headers: { \"Content-Type\": \"multipart/form-data\" },\n  });\n\n  return response;\n}\n\nexport async function editProfileRequisition(\n  data: {\n    name: string | undefined;\n    password: string | undefined;\n    bio: string | undefined;\n    job: string | undefined;\n  },\n  file: File | null,\n) {\n  const token = localStorage.getItem(\"token\");\n\n  const fields_edition = await axios.patch(`${backendUrl}/user`, data, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  if (file) {\n    const form_data = new FormData();\n    form_data.append(\"image\", file);\n\n    const image_edition = await axios.patch(\n      `${backendUrl}/user/image`,\n      form_data,\n      { headers: { Authorization: `Bearer ${token}` } },\n    );\n    return { fields_edition, image_edition };\n  }\n\n  return { fields_edition };\n}\n\nexport async function getPosts() {\n  const token = localStorage.getItem(\"token\");\n\n  const result = await Promise.all([\n    axios.get(`${backendUrl}/post/recent`, {\n      headers: { Authorization: `Bearer ${token}` },\n    }),\n    axios.get(`${backendUrl}/pdf/recent`, {\n      headers: { Authorization: `Bearer ${token}` },\n    }),\n    axios.get(`${backendUrl}/png/recent`, {\n      headers: { Authorization: `Bearer ${token}` },\n    }),\n  ]);\n\n  const [txt_result, pdf_result, png_result] = result.values();\n\n  if (\n    txt_result.status === 200 &&\n    pdf_result.status === 200 &&\n    png_result.status === 200\n  ) {\n    const txts: ServerTxtPost[] = txt_result.data;\n    const pdfs: ServerPdfPost[] = pdf_result.data;\n    const pngs: ServerPngPost[] = png_result.data;\n\n    const posts: Post[] = [\n      ...txts.map(servToCardTxtPost),\n      ...pdfs.map(servToCardPdfPost),\n      ...pngs.map(servToCardPngPost),\n    ];\n\n    return posts;\n  }\n\n  throw new Error(\"Failed to fetch posts\");\n}\n\nexport async function getUsers() {\n  const token = localStorage.getItem(\"token\");\n\n  const result = await axios.get(`${backendUrl}/user`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n\n  if (result.status === 200) {\n    const user: ServerUser[] = result.data;\n\n    return user;\n  }\n\n  throw new Error(\"Failed to fetch user\");\n}\n\nexport async function getUserProfile(user_id: string) {\n  const token = localStorage.getItem(\"token\");\n\n  const result = await axios.get(`${backendUrl}/user/profile${user_id}`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n\n  if (result.status === 200) {\n    const user: ServerUserProfile = result.data;\n\n    const client_data: UserProfileData = {\n      id: user.id,\n      owner: user.owner,\n      name: user.name,\n      bio: user.bio,\n      image: user.image,\n      job: user.job,\n      posts: [\n        ...user.posts.map(servToCardTxtPost),\n        ...user.pdfs.map(servToCardPdfPost),\n        ...user.pngs.map(servToCardPngPost),\n      ],\n    };\n\n    return client_data;\n  }\n\n  throw new Error(\"Failed to fetch user\");\n}\n\nexport async function makeFilePost(\n  file: File,\n  title: string,\n  type: \"pdf\" | \"png\",\n) {\n  if (file.name.split(\".\").at(-1) != type) {\n    throw new Error(\"formato de arquivo inv√°lido\");\n  }\n\n  const token = localStorage.getItem(\"token\");\n  const form_data = new FormData();\n  form_data.append(\"title\", title);\n  form_data.append(\"image\", file);\n\n  const response = await axios.post(`${backendUrl}/${type}`, form_data, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  return response;\n}\n\nexport function getPngUrl(entity_id: number, entity_type: \"user\" | \"post\") {\n  const path = `${backendUrl}/png/see${entity_type[0]}${entity_id}.png`;\n  console.log(path);\n  return path;\n}\n\nexport function getPdfUrl(entity_id: number) {\n  const path = `${backendUrl}/pdf/seep${entity_id}.pdf`;\n  console.log(path);\n  return path;\n}\n\ninterface ServerUserProfile {\n  id: number;\n  owner: boolean;\n  name: string;\n  image: string;\n  bio: string;\n  job: string;\n  pngs: ServerPngPost[];\n  pdfs: ServerPdfPost[];\n  posts: ServerTxtPost[];\n}\n\ninterface ServerUser {\n  id: number;\n  name: string;\n  image: string;\n  job: string;\n}\n\ninterface ServerTxtPost {\n  id: number;\n  title: string;\n  body: string;\n  createdAt: Date;\n  user: {\n    id: number;\n    name: string;\n  };\n}\n\ninterface ServerPdfPost {\n  id: number;\n  title: string;\n  file_name: string;\n  createdAt: Date;\n  user: {\n    id: number;\n    name: string;\n  };\n}\n\ninterface ServerPngPost {\n  id: number;\n  title: string;\n  file_name: string;\n  createdAt: Date;\n  user: {\n    id: number;\n    name: string;\n  };\n}\n\nfunction servToCardTxtPost(post: ServerTxtPost): CardTxtPost {\n  return {\n    txt: undefined,\n    id: post.id,\n    title: post.title,\n    body: post.body,\n    author_id: post.user.id,\n    author_name: post.user.name,\n  };\n}\n\nfunction servToCardPdfPost(post: ServerPdfPost): CardPdfPost {\n  return {\n    pdf: undefined,\n    id: post.id,\n    title: post.title,\n    file_name: post.file_name,\n    author_id: post.user.id,\n    author_name: post.user.name,\n  };\n}\n\nfunction servToCardPngPost(post: ServerPngPost): CardPngPost {\n  return {\n    png: undefined,\n    id: post.id,\n    title: post.title,\n    file_name: post.file_name,\n    author_id: post.user.id,\n    author_name: post.user.name,\n  };\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AAFA;AACA,MAAM,aAAa;;AAKZ,eAAe,MAAM,MAA0C;IACpE,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,WAAW,WAAW,CAAC,EAAE;IAC9D,OAAO;AACT;AAEO,eAAe,SACpB,MAKC,EACD,IAAiB;IAEjB,MAAM,YAAY,IAAI;IACtB,IAAI,MAAM;QACR,UAAU,MAAM,CAAC,SAAS;IAC5B;IACA,UAAU,MAAM,CAAC,QAAQ,OAAO,IAAI;IACpC,UAAU,MAAM,CAAC,YAAY,OAAO,QAAQ;IAC5C,UAAU,MAAM,CAAC,OAAO,OAAO,GAAG;IAClC,UAAU,MAAM,CAAC,OAAO,OAAO,GAAG;IAElC,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,WAAW,KAAK,CAAC,EAAE,WAAW;QACjE,SAAS;YAAE,gBAAgB;QAAsB;IACnD;IAEA,OAAO;AACT;AAEO,eAAe,uBACpB,IAKC,EACD,IAAiB;IAEjB,MAAM,QAAQ,aAAa,OAAO,CAAC;IAEnC,MAAM,iBAAiB,MAAM,qIAAA,CAAA,UAAK,CAAC,KAAK,CAAC,GAAG,WAAW,KAAK,CAAC,EAAE,MAAM;QACnE,SAAS;YAAE,eAAe,CAAC,OAAO,EAAE,OAAO;QAAC;IAC9C;IACA,IAAI,MAAM;QACR,MAAM,YAAY,IAAI;QACtB,UAAU,MAAM,CAAC,SAAS;QAE1B,MAAM,gBAAgB,MAAM,qIAAA,CAAA,UAAK,CAAC,KAAK,CACrC,GAAG,WAAW,WAAW,CAAC,EAC1B,WACA;YAAE,SAAS;gBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;YAAC;QAAE;QAElD,OAAO;YAAE;YAAgB;QAAc;IACzC;IAEA,OAAO;QAAE;IAAe;AAC1B;AAEO,eAAe;IACpB,MAAM,QAAQ,aAAa,OAAO,CAAC;IAEnC,MAAM,SAAS,MAAM,QAAQ,GAAG,CAAC;QAC/B,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,WAAW,YAAY,CAAC,EAAE;YACrC,SAAS;gBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;YAAC;QAC9C;QACA,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,WAAW,WAAW,CAAC,EAAE;YACpC,SAAS;gBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;YAAC;QAC9C;QACA,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,WAAW,WAAW,CAAC,EAAE;YACpC,SAAS;gBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;YAAC;QAC9C;KACD;IAED,MAAM,CAAC,YAAY,YAAY,WAAW,GAAG,OAAO,MAAM;IAE1D,IACE,WAAW,MAAM,KAAK,OACtB,WAAW,MAAM,KAAK,OACtB,WAAW,MAAM,KAAK,KACtB;QACA,MAAM,OAAwB,WAAW,IAAI;QAC7C,MAAM,OAAwB,WAAW,IAAI;QAC7C,MAAM,OAAwB,WAAW,IAAI;QAE7C,MAAM,QAAgB;eACjB,KAAK,GAAG,CAAC;eACT,KAAK,GAAG,CAAC;eACT,KAAK,GAAG,CAAC;SACb;QAED,OAAO;IACT;IAEA,MAAM,IAAI,MAAM;AAClB;AAEO,eAAe;IACpB,MAAM,QAAQ,aAAa,OAAO,CAAC;IAEnC,MAAM,SAAS,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,WAAW,KAAK,CAAC,EAAE;QACnD,SAAS;YAAE,eAAe,CAAC,OAAO,EAAE,OAAO;QAAC;IAC9C;IAEA,IAAI,OAAO,MAAM,KAAK,KAAK;QACzB,MAAM,OAAqB,OAAO,IAAI;QAEtC,OAAO;IACT;IAEA,MAAM,IAAI,MAAM;AAClB;AAEO,eAAe,eAAe,OAAe;IAClD,MAAM,QAAQ,aAAa,OAAO,CAAC;IAEnC,MAAM,SAAS,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,WAAW,aAAa,EAAE,SAAS,EAAE;QACrE,SAAS;YAAE,eAAe,CAAC,OAAO,EAAE,OAAO;QAAC;IAC9C;IAEA,IAAI,OAAO,MAAM,KAAK,KAAK;QACzB,MAAM,OAA0B,OAAO,IAAI;QAE3C,MAAM,cAA+B;YACnC,IAAI,KAAK,EAAE;YACX,OAAO,KAAK,KAAK;YACjB,MAAM,KAAK,IAAI;YACf,KAAK,KAAK,GAAG;YACb,OAAO,KAAK,KAAK;YACjB,KAAK,KAAK,GAAG;YACb,OAAO;mBACF,KAAK,KAAK,CAAC,GAAG,CAAC;mBACf,KAAK,IAAI,CAAC,GAAG,CAAC;mBACd,KAAK,IAAI,CAAC,GAAG,CAAC;aAClB;QACH;QAEA,OAAO;IACT;IAEA,MAAM,IAAI,MAAM;AAClB;AAEO,eAAe,aACpB,IAAU,EACV,KAAa,EACb,IAAmB;IAEnB,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,MAAM;QACvC,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,QAAQ,aAAa,OAAO,CAAC;IACnC,MAAM,YAAY,IAAI;IACtB,UAAU,MAAM,CAAC,SAAS;IAC1B,UAAU,MAAM,CAAC,SAAS;IAE1B,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,EAAE,MAAM,EAAE,WAAW;QACpE,SAAS;YACP,gBAAgB;YAChB,eAAe,CAAC,OAAO,EAAE,OAAO;QAClC;IACF;IAEA,OAAO;AACT;AAEO,SAAS,UAAU,SAAiB,EAAE,WAA4B;IACvE,MAAM,OAAO,GAAG,WAAW,QAAQ,EAAE,WAAW,CAAC,EAAE,GAAG,UAAU,IAAI,CAAC;IACrE,QAAQ,GAAG,CAAC;IACZ,OAAO;AACT;AAEO,SAAS,UAAU,SAAiB;IACzC,MAAM,OAAO,GAAG,WAAW,SAAS,EAAE,UAAU,IAAI,CAAC;IACrD,QAAQ,GAAG,CAAC;IACZ,OAAO;AACT;AAsDA,SAAS,kBAAkB,IAAmB;IAC5C,OAAO;QACL,KAAK;QACL,IAAI,KAAK,EAAE;QACX,OAAO,KAAK,KAAK;QACjB,MAAM,KAAK,IAAI;QACf,WAAW,KAAK,IAAI,CAAC,EAAE;QACvB,aAAa,KAAK,IAAI,CAAC,IAAI;IAC7B;AACF;AAEA,SAAS,kBAAkB,IAAmB;IAC5C,OAAO;QACL,KAAK;QACL,IAAI,KAAK,EAAE;QACX,OAAO,KAAK,KAAK;QACjB,WAAW,KAAK,SAAS;QACzB,WAAW,KAAK,IAAI,CAAC,EAAE;QACvB,aAAa,KAAK,IAAI,CAAC,IAAI;IAC7B;AACF;AAEA,SAAS,kBAAkB,IAAmB;IAC5C,OAAO;QACL,KAAK;QACL,IAAI,KAAK,EAAE;QACX,OAAO,KAAK,KAAK;QACjB,WAAW,KAAK,SAAS;QACzB,WAAW,KAAK,IAAI,CAAC,EAAE;QACvB,aAAa,KAAK,IAAI,CAAC,IAAI;IAC7B;AACF","debugId":null}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":["file:///home/rafa/tudo/materias/redes/redesfront/src/app/register/form.tsx"],"sourcesContent":["\"use client\";\n\nimport { register } from \"@/lib/requisition\";\nimport { Formik, Field, Form } from \"formik\";\nimport React, { useState } from \"react\";\n\nexport default function RegisterForm() {\n  const [file, setFile] = useState<File | null>(null);\n\n  function formSubmit(data: {\n    name: string;\n    password: string;\n    bio: string;\n    job: string;\n  }) {\n    const result = register(data, file);\n\n    result.then((data) => console.log(data));\n    result.catch((err) => console.log(err));\n  }\n\n  return (\n    <div className=\"flex min-h-screen justify-center content-center\">\n      <Formik\n        initialValues={{ name: \"\", password: \"\", bio: \"\", job: \"student\" }}\n        onSubmit={formSubmit}\n      >\n        <Form className=\"bg-blue-300 p-8 rounded shadow-lg flex flex-col gap gap-5 h-fit\">\n          <div className=\"flex flex-col\">\n            <label htmlFor=\"name\" className=\"text-sm\">\n              nome:\n            </label>\n            <Field\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              className=\"bg-white border rounded px-2 py-1\"\n              required\n            />\n          </div>\n\n          <div className=\"flex flex-col\">\n            <label htmlFor=\"password\" className=\"text-sm\">\n              senha:\n            </label>\n            <Field\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              className=\"bg-white border rounded px-2 py-1\"\n              required\n            />\n          </div>\n\n          <div className=\"flex flex-col\">\n            <label htmlFor=\"bio\" className=\"text-sm\">\n              bio:\n            </label>\n            <Field\n              type=\"text\"\n              id=\"bio\"\n              name=\"bio\"\n              className=\"bg-white border rounded px-2 py-1\"\n              required\n            />\n          </div>\n\n          <div className=\"flex flex-col\">\n            <label htmlFor=\"job\" className=\"text-sm\">\n              cargo:\n            </label>\n            <Field\n              as=\"select\"\n              name=\"job\"\n              id=\"job\"\n              className=\"bg-white border rounded px-2 py-1\"\n              required\n            >\n              <option value=\"student\">Estudante</option>\n              <option value=\"professor\">Professor</option>\n            </Field>\n          </div>\n\n          <div className=\"flex flex-col\">\n            <label htmlFor=\"image\" className=\"text-sm\">\n              image:\n            </label>\n            <input\n              type=\"file\"\n              className=\"bg-white border rounded px-2 py-1\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                setFile(\n                  event.currentTarget.files\n                    ? event.currentTarget.files[0]\n                    : null,\n                );\n              }}\n            ></input>\n          </div>\n          <button type=\"submit\" className=\"bg-white border rounded px-2 py-1\">\n            Register\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAE9C,SAAS,WAAW,IAKnB;QACC,MAAM,SAAS,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE,MAAM;QAE9B,OAAO,IAAI,CAAC,CAAC,OAAS,QAAQ,GAAG,CAAC;QAClC,OAAO,KAAK,CAAC,CAAC,MAAQ,QAAQ,GAAG,CAAC;IACpC;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,+IAAA,CAAA,SAAM;YACL,eAAe;gBAAE,MAAM;gBAAI,UAAU;gBAAI,KAAK;gBAAI,KAAK;YAAU;YACjE,UAAU;sBAEV,cAAA,8OAAC,+IAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAM,SAAQ;gCAAO,WAAU;0CAAU;;;;;;0CAG1C,8OAAC,+IAAA,CAAA,QAAK;gCACJ,MAAK;gCACL,IAAG;gCACH,MAAK;gCACL,WAAU;gCACV,QAAQ;;;;;;;;;;;;kCAIZ,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAM,SAAQ;gCAAW,WAAU;0CAAU;;;;;;0CAG9C,8OAAC,+IAAA,CAAA,QAAK;gCACJ,MAAK;gCACL,IAAG;gCACH,MAAK;gCACL,WAAU;gCACV,QAAQ;;;;;;;;;;;;kCAIZ,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAM,SAAQ;gCAAM,WAAU;0CAAU;;;;;;0CAGzC,8OAAC,+IAAA,CAAA,QAAK;gCACJ,MAAK;gCACL,IAAG;gCACH,MAAK;gCACL,WAAU;gCACV,QAAQ;;;;;;;;;;;;kCAIZ,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAM,SAAQ;gCAAM,WAAU;0CAAU;;;;;;0CAGzC,8OAAC,+IAAA,CAAA,QAAK;gCACJ,IAAG;gCACH,MAAK;gCACL,IAAG;gCACH,WAAU;gCACV,QAAQ;;kDAER,8OAAC;wCAAO,OAAM;kDAAU;;;;;;kDACxB,8OAAC;wCAAO,OAAM;kDAAY;;;;;;;;;;;;;;;;;;kCAI9B,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAM,SAAQ;gCAAQ,WAAU;0CAAU;;;;;;0CAG3C,8OAAC;gCACC,MAAK;gCACL,WAAU;gCACV,UAAU,CAAC;oCACT,QACE,MAAM,aAAa,CAAC,KAAK,GACrB,MAAM,aAAa,CAAC,KAAK,CAAC,EAAE,GAC5B;gCAER;;;;;;;;;;;;kCAGJ,8OAAC;wBAAO,MAAK;wBAAS,WAAU;kCAAoC;;;;;;;;;;;;;;;;;;;;;;AAO9E","debugId":null}}]
}